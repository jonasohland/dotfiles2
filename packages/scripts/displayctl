#! /bin/bash

shopt -s nullglob

NL=$'\n'

function error() {
  cat <<<"$@" 1>&2
}

function help() {
  echo "usage: displayctl <command> [value]"
  echo "commands:"
  echo "  list"
  echo "  init <name>"
  echo "  reset <name>"
  echo "  size <name> { <width>x<height> | highres }"
  echo "  rate <name> { <rate> | highrr }"
  echo "  scale <name> <scale>"
  echo "  postition <name> { <x>:<y> | auto [ -left | -right | -up | -down ] }"
}

function displayctl_update_state() {
  mkdir -p "${HOME}/.local/state/displayctl"
  echo "size=${2}" >"${HOME}/.local/state/displayctl/${1}"
  echo "rate=${3}" >>"${HOME}/.local/state/displayctl/${1}"
  echo "position=${4}" >>"${HOME}/.local/state/displayctl/${1}"
  echo "scale=${5}" >>"${HOME}/.local/state/displayctl/${1}"
}

function displayctl_build_entry() {
  name="${1}"
  unset size
  unset rate
  unset scale
  unset position

  source "${HOME}/.local/state/displayctl/${name}"

  echo "monitor = ${name},${size}@${rate},${position},${scale}"
}

function displayctl_global_conf_write() {
  contents="# generated by displayctl"

  for entry in "${HOME}/.local/state/displayctl/"*; do
    contents="${contents}${NL}$(displayctl_build_entry "$(basename "${entry}")")"
  done

  echo "${contents}" >"${HOME}/.config/hypr/displayctl.conf"
}

function displayctl_list() {
  hyprctl monitors
}

function displayctl_init() {
  local display_name="${1}"

  if [[ -z "${display_name}" ]]; then
    help
    exit 1
  fi

  display_info="$(hyprctl -j monitors | jq ".[] | select(.name == \"${display_name}\")")"
  if [[ -z "${display_info}" ]]; then
    error "not found: ${display_name}"
    exit 1
  fi

  height="$(jq .height <<<"${display_info}")"
  width="$(jq .width <<<"${display_info}")"
  rate="$(jq .refreshRate <<<"${display_info}")"
  scale="$(jq .scale <<<"${display_info}")"
  x="$(jq .x <<<"${display_info}")"
  y="$(jq .y <<<"${display_info}")"

  echo "name:     ${display_name}"
  echo "size:     ${width}x${height}"
  echo "rate:     ${rate}"
  echo "scale:    ${scale}"
  echo "position: ${x}x${y}"

  displayctl_update_state "${display_name}" "${width}x${height}" "${rate}" "${x}x${y}" "${scale}"
  displayctl_global_conf_write
}

function displayctl_set_scale() {
  display_name="${1}"
  value="${2}"

  [[ -z "${display_name}" ]] && help && exit 1
  [[ -z "${value}" ]] && help && exit 1
  [[ ! -f "${HOME}/.local/state/displayctl/${display_name}" ]] && displayctl_init "${display_name}"

  unset size
  unset rate
  unset position
  unset scale

  source "${HOME}/.local/state/displayctl/${display_name}"

  displayctl_update_state "${display_name}" "${size}" "${rate}" "${position}" "${value}"
  displayctl_global_conf_write
}

function displayctl_set_rate() {
  display_name="${1}"
  value="${2}"

  [[ -z "${display_name}" ]] && help && exit 1
  [[ -z "${value}" ]] && help && exit 1
  [[ ! -f "${HOME}/.local/state/displayctl/${display_name}" ]] && displayctl_init "${display_name}"

  unset size
  unset rate
  unset position
  unset scale

  source "${HOME}/.local/state/displayctl/${display_name}"

  displayctl_update_state "${display_name}" "${size}" "${value}" "${position}" "${scale}"
  displayctl_global_conf_write
}

function displayctl_set_position() {
  display_name="${1}"
  value="${2}"

  [[ -z "${display_name}" ]] && help && exit 1
  [[ -z "${value}" ]] && help && exit 1
  [[ ! -f "${HOME}/.local/state/displayctl/${display_name}" ]] && displayctl_init "${display_name}"

  unset size
  unset rate
  unset position
  unset scale

  source "${HOME}/.local/state/displayctl/${display_name}"

  displayctl_update_state "${display_name}" "${size}" "${rate}" "${value}" "${scale}"
  displayctl_global_conf_write
}

function displayctl_set_size() {
  display_name="${1}"
  value="${2}"

  [[ -z "${display_name}" ]] && help && exit 1
  [[ -z "${value}" ]] && help && exit 1
  [[ ! -f "${HOME}/.local/state/displayctl/${display_name}" ]] && displayctl_init "${display_name}"

  unset size
  unset rate
  unset position
  unset scale

  source "${HOME}/.local/state/displayctl/${display_name}"

  displayctl_update_state "${display_name}" "${value}" "${rate}" "${position}" "${scale}"
  displayctl_global_conf_write
}

function displayctl_reset() {
  local display_name="${1}"

  if [[ -z "${display_name}" ]]; then
    help
    exit 1
  fi

  rm -f "${HOME}/.local/state/displayctl/${display_name}"
  displayctl_global_conf_write
}

case "${1}" in
list)
  displayctl_list "${2}"
  ;;
init)
  displayctl_init "${2}"
  ;;
scale)
  displayctl_set_scale "${2}" "${3}"
  ;;
rate)
  displayctl_set_rate "${2}" "${3}"
  ;;
position)
  displayctl_set_position "${2}" "${3}"
  ;;
size)
  displayctl_set_size "${2}" "${3}"
  ;;
reset)
  displayctl_reset "${2}"
  ;;
*)
  help
  exit 1
  ;;
esac
